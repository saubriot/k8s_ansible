---
# file: roles/k8s/tasks/install.yml

- name: modprobe br_netfilter & sysctl
  shell: |
    modprobe br_netfilter
    sysctl net.bridge.bridge-nf-call-iptables=1
    sysctl net.bridge.bridge-nf-call-ip6tables=1
    sysctl net.ipv4.ip_forward=1

- name: create file /etc/sysctl.d/k8s.conf
  copy:
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
    dest: /etc/sysctl.d/k8s.conf
  become: true

- name: sysctl --system
  shell: sysctl --system

- name: install packages "ebtables, ethtool"
  apt:
    pkg:
    - ebtables
    - ethtool
  when: ansible_facts['os_family'] == "Debian"

- name: update-alternatives --set iptables, ip6tables, arptables, ebtables
  shell: |
    update-alternatives --set iptables /usr/sbin/iptables-legacy
    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
    update-alternatives --set arptables /usr/sbin/arptables-legacy
    update-alternatives --set ebtables /usr/sbin/ebtables-legacy

- name: apt update
  apt:
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: add google cloud apt signing key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg 
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: add apt kubernetes source list
  shell: | 
    curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ k8s.apt.version }}/deb/Release.key | sudo gpg --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s.apt.version }}/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
    sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
  when: ansible_facts['os_family'] == "Debian"

- name: apt update
  apt:
    update_cache: yes

- name: apt-mark unhold kubelet kubeadm kubectl
  shell: | 
    apt-mark unhold kubelet kubeadm kubectl
  when: ansible_facts['os_family'] == "Debian"

- name: install packages "kubelet, kubeadm, kubectl"
  apt:
    pkg:
    - kubelet
    - kubeadm
    - kubectl
  when: ansible_facts['os_family'] == "Debian"

- name: apt-mark hold kubelet kubeadm kubectl
  shell: apt-mark hold kubelet kubeadm kubectl

- name: remove swap from /etc/fstab
  lineinfile:
    path: /etc/fstab
    state: absent
    regexp: ' swap '

- name: disable swap
  shell: swapoff -a

