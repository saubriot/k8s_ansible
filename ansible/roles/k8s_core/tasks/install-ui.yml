---
# file: roles/k8s_core/tasks/install-dashboard.yml

- name: install kubernetes dashboard
  shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml
  become: true
  become_user: kubeadmin

- name: create directory /home/kubeadmin/dashboard
  file:
    path: /home/kubeadmin/dashboard
    state: directory
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/dashboard/admin-user.yaml
  copy:
    content: |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: admin-user
        namespace: kube-system
    dest: /home/kubeadmin/dashboard/admin-user.yaml
  become: true
  become_user: kubeadmin

- name: create admin user
  shell: kubectl apply -f /home/kubeadmin/dashboard/admin-user.yaml
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/dashboard/admin-user-rbac.yaml
  copy:
    content: |
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRoleBinding
      metadata:
        name: admin-user
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: admin-user
        namespace: kube-system
    dest: /home/kubeadmin/dashboard/admin-user-rbac.yaml
  become: true
  become_user: kubeadmin

- name: create admin user rbac
  shell: kubectl apply -f /home/kubeadmin/dashboard/admin-user-rbac.yaml
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cfssl/dashboard-csr.json
  copy:
    content: |
      {
          "CN": "{{ k8s.core.ui.csr_CN }}",
          "hosts": [
              "{{ k8s.core.ui.host }}"
          ],
          "key": {
              "algo": "rsa",
              "size": 2048
          },
          "names": [
              {
                  "C": "{{ k8s.core.cfssl.ca.csr_C }}",
                  "L": "{{ k8s.core.cfssl.ca.csr_L }}",
                  "ST": "{{ k8s.core.cfssl.ca.csr_ST }}"
              }
          ]
      }
    dest: /home/kubeadmin/cfssl/dashboard-csr.json
  become: true
  become_user: kubeadmin

- name: cfssl gencert
  shell: |
    cd /home/kubeadmin/cfssl 
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=web-servers dashboard-csr.json | cfssljson -bare dashboard
  become: true
  become_user: kubeadmin

- name: create secret tls-secret
  shell: |
    cd /home/kubeadmin/cfssl 
    kubectl create secret tls tls-secret --key ./dashboard-key.pem --cert dashboard.pem -n kubernetes-dashboard
  become: true
  ignore_errors: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/dashboard/k8s-dashboard-nginx.yaml
  copy:
    content: |
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: k8s-dashboard-nginx
        namespace: kubernetes-dashboard
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      spec:
        tls:
        - secretName: tls-secret
        rules:
        - host: {{ k8s.core.ui.host }}
          http:
            paths:
            - path: /
              backend:
                serviceName: kubernetes-dashboard
                servicePort: 443
    dest: /home/kubeadmin/dashboard/k8s-dashboard-nginx.yaml
  become: true
  become_user: kubeadmin

- name: apply dashboard nginx ingress
  shell: kubectl apply -f /home/kubeadmin/dashboard/k8s-dashboard-nginx.yaml
  become: true
  become_user: kubeadmin
