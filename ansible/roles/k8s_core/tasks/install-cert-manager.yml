---
# file: roles/k8s_core/tasks/install-cert-manager.yml

- name: install cert-manager
  shell: |
    kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/{{ k8s.core.cert_manager.version }}/cert-manager.yaml
    kubectl wait pods -n cert-manager --all --for condition=Ready --timeout=120s
  become: true
  become_user: kubeadmin

- name: create directory /home/kubeadmin/cert-manager
  file:
    path: /home/kubeadmin/cert-manager
    state: directory
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cert-manager/ca.json
  copy:
    content: |
      {
          "CN": "{{ k8s.core.cert_manager.ca.cn }}",
          "key": {
              "algo": "rsa",
              "size": 4096
          },
          "names": [{
              "C": "{{ k8s.core.cert_manager.ca.csr.C }}",
              "L": "{{ k8s.core.cert_manager.ca.csr.L }}",
              "O": "{{ k8s.core.cert_manager.ca.csr.ST }}"
          }],
          "ca": {
              "expiry": "{{ k8s.core.cert_manager.ca.expiry }}"
          }
      }
    dest: /home/kubeadmin/cert-manager/ca.json
  become: true
  become_user: kubeadmin

- name: cfssl gencert
  shell: |
    cd /home/kubeadmin/cert-manager 
    cfssl gencert -initca ca.json | cfssljson -bare ca
    mv ca.pem ca.crt
    mv ca-key.pem ca.key
  become: true
  become_user: kubeadmin

- name: create secret ca-key-pair
  shell: |
    cd /home/kubeadmin/cert-manager 
    kubectl create secret tls ca-key-pair --key ./ca.key --cert ca.crt -n {{ k8s.core.cert_manager.namespace }}
  become: true
  ignore_errors: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cert-manager/ca-cluster-issuer.yaml
  copy:
    content: |
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: ca-issuer
        namespace: {{ k8s.core.cert_manager.namespace }}
      spec:
        ca:
          secretName: ca-key-pair
    dest: /home/kubeadmin/cert-manager/ca-cluster-issuer.yaml
  become: true
  become_user: kubeadmin

- name: kubectl apply -f /home/kubeadmin/cert-manager/ca-cluster-issuer.yaml
  shell: kubectl apply -f /home/kubeadmin/cert-manager/ca-cluster-issuer.yaml
  become: true
  become_user: kubeadmin





