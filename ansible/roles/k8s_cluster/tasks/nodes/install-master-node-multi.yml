---

- name: create file /var/log/kubeadm_init_config.yaml
  copy:
    content: |
      ---
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: InitConfiguration
      nodeRegistration:
        criSocket: "{{ k8s.cri.criSocket }}"
      localAPIEndpoint:
        advertiseAddress: "{{ ansible_host }}"
        bindPort: {{ k8s.master.apiserver_port }}    
      ---
      apiVersion: kubeadm.k8s.io/v1beta3
      kind: ClusterConfiguration
      controlPlaneEndpoint: "{{ k8s.master.load_balancer_ip }}:{{ k8s.master.apiserver_port }}"
      networking:
        podSubnet: "{{ k8s.master.pod_network_cidr }}"      
      {{ k8s.cluster.configuration.etcd | indent(0) }}

    dest: /var/log/kubeadm_init_config.yaml

- name: kubeadm init multi master
  shell: |
    kubeadm init --config /var/log/kubeadm_init_config.yaml --upload-certs {{ k8s.master.kubeadm_extra }} > /var/log/kubeadm_init.log
    mkdir -p /home/kubeadmin/.kube
    cp -f /etc/kubernetes/admin.conf /home/kubeadmin/.kube/config
    chmod -R 0755 /home/kubeadmin/.kube
    chown -R kubeadmin:kubeadmin /home/kubeadmin
    chmod 700 /home/kubeadmin/.kube/config

- name: check if Kubernetes API server is available and returning status 200
  shell: |
    bash -c 'for i in {1..60}; do sleep 1; if [ $(curl -o /dev/null -s -w "%{http_code}\n" -k https://{{ ansible_host }}:{{ k8s.master.apiserver_port }}/healthz) -ne 200 ]; then echo -ne x; else break; fi; done'

