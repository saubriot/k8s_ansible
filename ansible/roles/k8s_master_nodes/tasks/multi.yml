---
# file: roles/k8s_master_nodes/tasks/multi.yml

- name: kubeadm init multi master
  shell: kubeadm init --cri-socket {{ k8s.cri.criSocket }} --control-plane-endpoint {{ k8s.master.load_balancer_ip }}:{{ k8s.master.apiserver_port }} --upload-certs --pod-network-cidr {{ k8s.master.pod_network_cidr }} {{ k8s.master.kubeadm_extra }} --skip-phases=addon/kube-proxy > /var/log/kubeadm_init.log

- name: check if Kubernetes API server is available and returning status 200
  shell: |
    bash -c 'for i in {1..60}; do sleep 1; if [ $(curl -o /dev/null -s -w "%{http_code}\n" -k https://{{ ansible_host }}:{{ k8s.master.apiserver_port }}/healthz) -ne 200 ]; then echo -ne x; else break; fi; done'

- name: kubeadm init multi master
  shell: |
    kubeadm init phase addon kube-proxy --control-plane-endpoint="{{ ansible_host }}:{{ k8s.master.apiserver_port }}" --pod-network-cidr="{{ k8s.master.pod_network_cidr }}" >> /var/log/kubeadm_init.log

- name: get kubadm join command for master node
  shell: grep -E "kubeadm join|--discovery|--control-plane" /var/log/kubeadm_init.log | head -n 3
  register: kubeadm_join_master_result

- name: get kubadm join command for node
  shell: grep -E "kubeadm join|--discovery" /var/log/kubeadm_init.log | tail -2
  register: kubeadm_join_node_result

- name: store kubeadm join command for node
  copy:
    content: "{{ kubeadm_join_node_result.stdout }}"
    dest: "/var/log/k8s_join_node_file_{{ all.environment }}"

- name: store kubeadm join command for master
  copy:
    content: "{{ kubeadm_join_master_result.stdout }}"
    dest: "/var/log/k8s_join_master_file_{{ all.environment }}"

- name: fetch kubeadm join command for node
  fetch:
    src: "/var/log/k8s_join_node_file_{{ all.environment }}"
    dest: "{{ all.fetch_directory }}/"
    flat: yes

- name: fetch kubeadm join command for master
  fetch:
    src: "/var/log/k8s_join_master_file_{{ all.environment }}"
    dest: "{{ all.fetch_directory }}/"
    flat: yes
