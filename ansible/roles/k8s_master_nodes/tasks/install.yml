---
# file: roles/k8s_master_nodes/tasks/main.yml

- name: install package certbot
  apt:
    name: certbot
    state: present

- name: add the user kubeadmin
  user:
    name: kubeadmin
    shell: /bin/bash
    append: yes

- name: kubeadm config
  shell: kubeadm config print init-defaults --component-configs=KubeletConfiguration > /tmp/kubeadm_config

- replace:
    path: /tmp/kubeadm_config
    regexp: '(\s+)criSocket: unix:///var/run/containerd/containerd.sock(\s+.*)?$'
    replace: '\1criSocket: unix:///var/run/crio/crio.sock\2'
    backup: yes

- replace:
    path: /tmp/kubeadm_config
    regexp: '(\s+)advertiseAddress: 1.2.3.4(\s+.*)?$'
    replace: '\1advertiseAddress: {{ ansible_host }}\2'
    backup: yes

- name: add pod-network-cidr to config
  lineinfile:
    path: /tmp/kubeadm_config
    insertafter: "^networking:" 
    line: '  podSubnet: {{ k8s.master.pod_network_cidr }}'
    firstmatch: yes
    state: present  
    backup: yes

- name: kubeadm init multi master
  shell: kubeadm init --control-plane-endpoint {{ k8s.master.load_balancer_ip }}:{{ k8s.master.apiserver_port }} --upload-certs --pod-network-cidr {{ k8s.master.pod_network_cidr }} {{ k8s.master.kubeadm_extra }} > /var/log/kubeadm_init.log
  when: init_master == "multi" 

- name: kubeadm init single master
  shell: kubeadm init --config=/tmp/kubeadm_config {{ k8s.master.kubeadm_extra }} > /var/log/kubeadm_init.log
  when: init_master == "single" 

- name: get kubadm join command for master node
  shell: grep -E "kubeadm join|--discovery|--control-plane" /var/log/kubeadm_init.log | head -n 3
  register: kubeadm_join_master_result
  when: init_master == "multi"  

- name: get kubadm join command for node
  shell: grep -E "kubeadm join|--discovery" /var/log/kubeadm_init.log | tail -2
  register: kubeadm_join_node_result
  when: init_master == "multi" or init_master == "single"   

- name: store kubeadm join command for node
  copy:
    content: "{{ kubeadm_join_node_result.stdout }}"
    dest: "/var/log/k8s_join_node_file_{{ all.environment }}"
  when: init_master == "multi" or init_master == "single"      

- name: store kubeadm join command for master
  copy:
    content: "{{ kubeadm_join_master_result.stdout }}"
    dest: "/var/log/k8s_join_master_file_{{ all.environment }}"
  when: init_master == "multi"     

- name: fetch kubeadm join command for node
  fetch:
    src: "/var/log/k8s_join_node_file_{{ all.environment }}"
    dest: "{{ all.fetch_directory }}/"
    flat: yes
  when: init_master == "multi" or init_master == "single"      

- name: fetch kubeadm join command for master
  fetch:
    src: "/var/log/k8s_join_master_file_{{ all.environment }}"
    dest: "{{ all.fetch_directory }}/"
    flat: yes
  when: init_master == "multi"      

- name: store kubeadm join command for master
  copy:
    src: "{{ all.fetch_directory }}/k8s_join_master_file"
    dest: "/var/log/k8s_join_master_file_{{ all.environment }}"
  when: init_master == "join"  
  
- name: get kubadm join command for master
  shell: "cat /var/log/k8s_join_master_file_{{ all.environment }}"
  register: kubeadm_join_master_result
  when: init_master == "join"  

- name: kubeadm join master
  shell: "{{ kubeadm_join_master_result.stdout }} --apiserver-advertise-address {{ ansible_host }} {{ k8s.master.kubeadm_extra }} > /var/log/kubeadm_join.log"
  when: init_master == "join"  
  
- name: create /home/kubeadmin/.kube
  file:
    path: /home/kubeadmin/.kube
    state: directory
    mode: '0755'

- name: remove /home/kubeadmin/.kube/config if exists
  file:
    path: /home/kubeadmin/.kube/config
    state: absent

- name: cp -i /etc/kubernetes/admin.conf /home/kubeadmin/.kube/config
  shell: |
    cp -i /etc/kubernetes/admin.conf /home/kubeadmin/.kube/config
    chown -R kubeadmin:kubeadmin /home/kubeadmin

- name: create openebs storage class hostpath
  file:
    path: "{{ k8s.openebs.storageclass.hostpath }}"
    state: directory
    mode: '0755'
